@inject IJSRuntime JS

@if (Movie is not null)
{
    <div class="card h-100 fade-in" @ref="posterCardElement">
        @if (string.IsNullOrEmpty(Movie.poster_path))
        {
            <img class="card-img-top" alt="Movie Poster" src="/images/placeholder.png" />
        }
        else
        {
            <img class="card-img-top" alt="Movie Poster" src="@($"https://image.tmdb.org/t/p/w500{Movie.poster_path}")" />
        }

        <div class="card-body border-top bg-light">
            <h5 class="card-title">@Movie.title</h5>
            <p class="card-text">@Movie.release_date</p>
        </div>
        <div class="card-footer text-end">
            <a class="btn btn-primary" href="/movie/@Movie.id">Details</a>
        </div>
    </div>
}
else
{
    <div class="card h-100">
        <img class="card-img-top" alt="Movie Poster" src="/images/placeholder.png" />
        <div class="card-body border-top bg-light">
            <div class="card-title placeholder-glow">
                <span class="placeholder col-6"></span>
            </div>
            <p class="card-text placeholder-glow">
                <span class="placeholder col-8"></span>
            </p>
        </div>
        <div class="card-footer text-end">
            <button class="btn btn-primary disabled placeholder col-6">Details</button>
        </div>
    </div>
}

@code {
    private ElementReference posterCardElement;

    [Parameter]
    public PopularMovie? Movie { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("VanillaTilt.init", posterCardElement, new
            {
                max = 15,
                speed = 300,

            });
        }
    }

    public void Dispose()
    {
        JS.InvokeVoidAsync("VanillaTile.destroy", posterCardElement);
    }
}
